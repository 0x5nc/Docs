<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Working with SQL Server LocalDB </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Working with SQL Server LocalDB ">
    <meta name="generator" content="docfx 2.24.0.0">
    
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../styles/docfx.css">
    <link rel="stylesheet" href="../../styles/main.css">
    <meta property="docfx:navrel" content="/foo">
    <meta property="docfx:tocrel" content="../../toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../../index.html">
                <img id="logo" class="svg" src="../../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="tutorials/first-mvc-app/working-with-sql">
<h1 id="working-with-sql-server-localdb" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="15" sourceendlinenumber="15">Working with SQL Server LocalDB</h1>

<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="17" sourceendlinenumber="17">By <a href="https://twitter.com/RickAndMSFT" data-raw-source="[Rick Anderson](https://twitter.com/RickAndMSFT)" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="17" sourceendlinenumber="17">Rick Anderson</a></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="19" sourceendlinenumber="19">The <code>MvcMovieContext</code> object handles the task of connecting to the database and mapping <code>Movie</code> objects to database records. The database context is registered with the <a class="xref" href="../../fundamentals/dependency-injection.html" data-raw-source="[Dependency Injection](xref:fundamentals/dependency-injection)" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="19" sourceendlinenumber="19">Dependency Injection</a> container in the <code>ConfigureServices</code> method in the <em>Startup.cs</em> file:</p>
<pre sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="21" sourceendlinenumber="21"><code class="lang-csharp" name="Main" highlight-lines="6-7">public void ConfigureServices(IServiceCollection services)
{
    // Add framework services.
    services.AddMvc();

    services.AddDbContext&lt;MvcMovieContext&gt;(options =&gt;
            options.UseSqlServer(Configuration.GetConnectionString(&quot;MvcMovieContext&quot;)));
}
</code></pre><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="23" sourceendlinenumber="23">The ASP.NET Core <a class="xref" href="../../fundamentals/configuration.html" data-raw-source="[Configuration](xref:fundamentals/configuration)" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="23" sourceendlinenumber="23">Configuration</a> system reads the <code>ConnectionString</code>. For local development, it gets the connection string from the <em>appsettings.json</em> file:</p>
<pre sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="25" sourceendlinenumber="25"><code class="lang-javascript" name="Main" highlight-lines="2">&quot;ConnectionStrings&quot;: {
  &quot;MvcMovieContext&quot;: &quot;Server=(localdb)\\mssqllocaldb;Database=MvcMovieContext-2;Trusted_Connection=True;MultipleActiveResultSets=true&quot;
}
</code></pre><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="27" sourceendlinenumber="27">When you deploy the app to a test or production server, you can use an environment variable or another approach to set the connection string to a real SQL Server. See <a class="xref" href="../../fundamentals/configuration.html" data-raw-source="[Configuration](xref:fundamentals/configuration)" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="27" sourceendlinenumber="27">Configuration</a> for more information.</p>
<h2 id="sql-server-express-localdb" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="29" sourceendlinenumber="29">SQL Server Express LocalDB</h2>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="31" sourceendlinenumber="31">LocalDB is a lightweight version of the SQL Server Express Database Engine that is targeted for program development. LocalDB starts on demand and runs in user mode, so there is no complex configuration. By default, LocalDB database creates &quot;*.mdf&quot; files in the <em>C:/Users/&lt;user></em> directory.</p>
<ul sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="33" sourceendlinenumber="41">
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="33" sourceendlinenumber="35"><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="33" sourceendlinenumber="33">From the <strong>View</strong> menu, open <strong>SQL Server Object Explorer</strong> (SSOX).</p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="35" sourceendlinenumber="35"><img src="working-with-sql/_static/ssox.png" alt="View menu" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="35" sourceendlinenumber="35"></p>
</li>
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="37" sourceendlinenumber="41"><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="37" sourceendlinenumber="37">Right click on the <code>Movie</code> table <strong>&gt; View Designer</strong></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="39" sourceendlinenumber="39"><img src="working-with-sql/_static/design.png" alt="Contextual menu open on Movie table" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="39" sourceendlinenumber="39"></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="41" sourceendlinenumber="41"><img src="working-with-sql/_static/dv.png" alt="Movie table open in Designer" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="41" sourceendlinenumber="41"></p>
</li>
</ul>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="43" sourceendlinenumber="43">Note the key icon next to <code>ID</code>. By default, EF will make a property named <code>ID</code> the primary key.</p>
<ul sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="45" sourceendlinenumber="49">
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="45" sourceendlinenumber="49"><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="45" sourceendlinenumber="45">Right click on the <code>Movie</code> table <strong>&gt; View Data</strong></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="47" sourceendlinenumber="47"><img src="working-with-sql/_static/ssox2.png" alt="Contextual menu open on Movie table" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="47" sourceendlinenumber="47"></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="49" sourceendlinenumber="49"><img src="working-with-sql/_static/vd22.png" alt="Movie table open showing table data" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="49" sourceendlinenumber="49"></p>
</li>
</ul>
<h2 id="seed-the-database" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="51" sourceendlinenumber="51">Seed the database</h2>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="53" sourceendlinenumber="53">Create a new class named <code>SeedData</code> in the <em>Models</em> folder. Replace the generated code with the following:</p>
<pre sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="55" sourceendlinenumber="55"><code class="lang-csharp" name="Main">using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Linq;

namespace MvcMovie.Models
{
    public static class SeedData
    {
        public static void Initialize(IServiceProvider serviceProvider)
        {
            using (var context = new MvcMovieContext(
                serviceProvider.GetRequiredService&lt;DbContextOptions&lt;MvcMovieContext&gt;&gt;()))
            {
                // Look for any movies.
                if (context.Movie.Any())
                {
                    return;   // DB has been seeded
                }

                context.Movie.AddRange(
                     new Movie
                     {
                         Title = &quot;When Harry Met Sally&quot;,
                         ReleaseDate = DateTime.Parse(&quot;1989-1-11&quot;),
                         Genre = &quot;Romantic Comedy&quot;,
                         Price = 7.99M
                     },

                     new Movie
                     {
                         Title = &quot;Ghostbusters &quot;,
                         ReleaseDate = DateTime.Parse(&quot;1984-3-13&quot;),
                         Genre = &quot;Comedy&quot;,
                         Price = 8.99M
                     },

                     new Movie
                     {
                         Title = &quot;Ghostbusters 2&quot;,
                         ReleaseDate = DateTime.Parse(&quot;1986-2-23&quot;),
                         Genre = &quot;Comedy&quot;,
                         Price = 9.99M
                     },

                   new Movie
                   {
                       Title = &quot;Rio Bravo&quot;,
                       ReleaseDate = DateTime.Parse(&quot;1959-4-15&quot;),
                       Genre = &quot;Western&quot;,
                       Price = 3.99M
                   }
                );
                context.SaveChanges();
            }
        }
    }
}
</code></pre><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="57" sourceendlinenumber="57">If there are any movies in the DB, the seed initializer returns and no movies are added.</p>
<pre sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="59" sourceendlinenumber="64"><code class="lang-csharp">if (context.Movie.Any())
{
    return;   // DB has been seeded.
}
</code></pre><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="66" sourceendlinenumber="66"><a name="si"></a></p>
<h3 id="add-the-seed-initializer" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="67" sourceendlinenumber="67">Add the seed initializer</h3>
<div class="tabGroup" id="tabgroup_czt3K4jO9n" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="69" sourceendlinenumber="79">
<ul role="tablist">
<li role="presentation">
<a href="#tabpanel_czt3K4jO9n_aspnetcore2x" role="tab" aria-controls="tabpanel_czt3K4jO9n_aspnetcore2x" data-tab="aspnetcore2x" tabindex="0" aria-selected="true" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="69" sourceendlinenumber="69">ASP.NET Core 2.x</a>
</li>
<li role="presentation">
<a href="#tabpanel_czt3K4jO9n_aspnetcore1x" role="tab" aria-controls="tabpanel_czt3K4jO9n_aspnetcore1x" data-tab="aspnetcore1x" tabindex="-1" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="75" sourceendlinenumber="75">ASP.NET Core 1.x</a>
</li>
</ul>
<section id="tabpanel_czt3K4jO9n_aspnetcore2x" role="tabpanel" data-tab="aspnetcore2x">
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="71" sourceendlinenumber="71">Add the seed initializer to the <code>Main</code> method in the <em>Program.cs</em> file:</p>
<pre sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="73" sourceendlinenumber="73"><code class="lang-csharp" name="Main" highlight-lines="6,14-32">using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using MvcMovie.Models;
using System;

namespace MvcMovie
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var host = BuildWebHost(args);

            using (var scope = host.Services.CreateScope())
            {
                var services = scope.ServiceProvider;

                try
                {
                    // Requires using RazorPagesMovie.Models;
                    SeedData.Initialize(services);
                }
                catch (Exception ex)
                {
                    var logger = services.GetRequiredService&lt;ILogger&lt;Program&gt;&gt;();
                    logger.LogError(ex, &quot;An error occurred seeding the DB.&quot;);
                }
            }

            host.Run();
        }

        public static IWebHost BuildWebHost(string[] args) =&gt;
            WebHost.CreateDefaultBuilder(args)
                .UseStartup&lt;Startup&gt;()
                .Build();
    }
}
</code></pre></section>
<section id="tabpanel_czt3K4jO9n_aspnetcore1x" role="tabpanel" data-tab="aspnetcore1x" aria-hidden="true" hidden="hidden">
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="77" sourceendlinenumber="77">Add the seed initializer to the end of the <code>Configure</code> method in the <em>Startup.cs</em> file.</p>
<pre sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="79" sourceendlinenumber="79"><code class="lang-csharp" name="Main" highlight-lines="9">            app.UseStaticFiles();
            app.UseMvc(routes =&gt;
            {
                routes.MapRoute(
                    name: &quot;default&quot;,
                    template: &quot;{controller=Home}/{action=Index}/{id?}&quot;);
            });

            SeedData.Initialize(app.ApplicationServices);
        }
    }
}
</code></pre></section>
</div>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="83" sourceendlinenumber="83">Test the app</p>
<ul sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="85" sourceendlinenumber="95">
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="85" sourceendlinenumber="85">Delete all the records in the DB. You can do this with the delete links in the browser or from SSOX.</li>
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="86" sourceendlinenumber="95"><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="86" sourceendlinenumber="86">Force the app to initialize (call the methods in the <code>Startup</code> class) so the seed method runs. To force initialization, IIS Express must be stopped and restarted. You can do this with any of the following approaches:</p>
<ul sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="88" sourceendlinenumber="95">
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="88" sourceendlinenumber="95"><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="88" sourceendlinenumber="88">Right click the IIS Express system tray icon in the notification area and tap <strong>Exit</strong> or <strong>Stop Site</strong></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="90" sourceendlinenumber="90"><img src="working-with-sql/_static/iisExIcon.png" alt="IIS Express system tray icon" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="90" sourceendlinenumber="90"></p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="92" sourceendlinenumber="92"><img src="working-with-sql/_static/stopIIS.png" alt="Contextual menu" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="92" sourceendlinenumber="92"></p>
<ul sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="94" sourceendlinenumber="95">
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="94" sourceendlinenumber="94">If you were running VS in non-debug mode, press F5 to run in debug mode</li>
<li sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="95" sourceendlinenumber="95">If you were running VS in debug mode, stop the debugger and press F5</li>
</ul>
</li>
</ul>
</li>
</ul>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="97" sourceendlinenumber="97">The app shows the seeded data.</p>
<p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="99" sourceendlinenumber="99"><img src="working-with-sql/_static/m55.png" alt="MVC Movie application open in Microsoft Edge showing movie data" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="99" sourceendlinenumber="99"></p>
<div class="step-by-step" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="101" sourceendlinenumber="101"><p sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="102" sourceendlinenumber="103"><a href="adding-model.html" data-raw-source="[Previous](adding-model.md)" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="102" sourceendlinenumber="102">Previous</a>
<a href="controller-methods-views.html" data-raw-source="[Next](controller-methods-views.md)" sourcefile="tutorials/first-mvc-app/working-with-sql.md" sourcestartlinenumber="103" sourceendlinenumber="103">Next</a>  </p>
</div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/aspnet/Docs/blob/w/riande/RP-EF/aspnetcore/tutorials/first-mvc-app/working-with-sql.md/#L1" class="contribution-link">Improve this Doc</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Copyright © 2015-2017 Microsoft<br>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../styles/main.js"></script>
  </body>
</html>
